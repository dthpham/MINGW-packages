diff --unified --recursive --text --color a/cmake/OpenCVDetectOpenCL.cmake b/cmake/OpenCVDetectOpenCL.cmake
--- a/cmake/OpenCVDetectOpenCL.cmake	2016-04-20 07:21:19.000000000 -0700
+++ b/cmake/OpenCVDetectOpenCL.cmake	2019-08-14 01:21:06.800647600 -0700
@@ -1,17 +1,31 @@
+set(OPENCL_FOUND ON CACHE BOOL "OpenCL library is found")
 if(APPLE)
-  set(OPENCL_FOUND YES)
   set(OPENCL_LIBRARY "-framework OpenCL" CACHE STRING "OpenCL library")
-  set(OPENCL_INCLUDE_DIR "" CACHE STRING "OpenCL include directory")
-  mark_as_advanced(OPENCL_INCLUDE_DIR OPENCL_LIBRARY)
-  set(HAVE_OPENCL_STATIC ON)
-else(APPLE)
-  set(OPENCL_FOUND YES)
-  set(HAVE_OPENCL_STATIC OFF)
-  set(OPENCL_INCLUDE_DIR "${OpenCV_SOURCE_DIR}/3rdparty/include/opencl/1.2")
-endif(APPLE)
+  set(OPENCL_INCLUDE_DIR "" CACHE PATH "OpenCL include directory")
+else()
+  if(MINGW)
+    FIND_LIBRARY(OPENCL_LIBRARY
+      NAMES OpenCL
+      DOC "OpenCL library"
+    )
+  else()  
+    set(OPENCL_LIBRARY "" CACHE STRING "OpenCL library")
+  endif()
+  set(OPENCL_INCLUDE_DIR "${OpenCV_SOURCE_DIR}/3rdparty/include/opencl/1.2" CACHE PATH "OpenCL include directory")
+endif()
+mark_as_advanced(OPENCL_INCLUDE_DIR OPENCL_LIBRARY)
 
 if(OPENCL_FOUND)
-  if(NOT HAVE_OPENCL_STATIC)
+
+    if(OPENCL_LIBRARY)
+      set(HAVE_OPENCL_STATIC ON)
+      set(OPENCL_LIBRARIES "${OPENCL_LIBRARY}")
+      MESSAGE(STATUS "Found OpenCL: ${OPENCL_LIBRARY}")
+    else()
+      set(HAVE_OPENCL_STATIC OFF)
+    endif()
+
+    if(NOT HAVE_OPENCL_STATIC)
     try_compile(__VALID_OPENCL
       "${OpenCV_BINARY_DIR}"
       "${OpenCV_SOURCE_DIR}/cmake/checks/opencl.cpp"
