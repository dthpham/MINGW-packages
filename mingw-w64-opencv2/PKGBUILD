# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Duong Pham <dthpham@gmail.com>

_realname=opencv
pkgbase=mingw-w64-${_realname}2
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}2"
pkgver=2.4.13
pkgrel=1
pkgdesc="Open Source Computer Vision Library (mingw-w64)"
arch=('any')
url="http://opencv.org/"
depends=(#"${MINGW_PACKAGE_PREFIX}-gst-plugins-base0.10"
        "${MINGW_PACKAGE_PREFIX}-intel-tbb"
        "${MINGW_PACKAGE_PREFIX}-jasper"
        "${MINGW_PACKAGE_PREFIX}-libjpeg"
        "${MINGW_PACKAGE_PREFIX}-libpng"
        "${MINGW_PACKAGE_PREFIX}-libtiff"
        "${MINGW_PACKAGE_PREFIX}-openexr"
        "${MINGW_PACKAGE_PREFIX}-zlib"
        #"${MINGW_PACKAGE_PREFIX}-qt5"
        #"${MINGW_PACKAGE_PREFIX}-gtkglext"
        #"${MINGW_PACKAGE_PREFIX}-gtk2"
        )
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
            #"${MINGW_PACKAGE_PREFIX}-qt5"
            "${MINGW_PACKAGE_PREFIX}-eigen3"
            "${MINGW_PACKAGE_PREFIX}-ffmpeg"
            "${MINGW_PACKAGE_PREFIX}-python2-numpy"
            # "${MINGW_PACKAGE_PREFIX}-vtk"
            )
optdepends=("${MINGW_PACKAGE_PREFIX}-eigen3"
            "${MINGW_PACKAGE_PREFIX}-ffmpeg: support to read and write video files"
            "${MINGW_PACKAGE_PREFIX}-python2-numpy: Python 2.x interface"
            "${MINGW_PACKAGE_PREFIX}-vtk: opencv_viz module")
provides=('opencv')
conflicts=('opencv')
source=("${_realname}-${pkgver}.tar.gz"::https://github.com/opencv/opencv/archive/${pkgver}.tar.gz
        'mingw-w64-cmake.patch'
        'free-tls-keys-on-dll-unload.patch'
        'solve_deg3-underflow.patch')
sha256sums=('94ebcca61c30034d5fb16feab8ec12c8a868f5162d20a9f0396f0f5f6d8bbbff'
            '9a63750991daf6a78fde27de34a218da8e8905aba6776dcd1cc691c7c868480f'
            '14e9421b36218709cd0fc52df35272749622edcaa0c9497aa54b61b77176c9d4'
            'fd4e095c3c879413184fc6b91a7b0a77dbb128612341a8be2c99d804a203e362')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  patch -Np1 -i "$srcdir/mingw-w64-cmake.patch"
  patch -Np1 -i "$srcdir/free-tls-keys-on-dll-unload.patch"
  patch -Np1 -i "$srcdir/solve_deg3-underflow.patch"
}

build() {
  # SSE only available from Pentium 3 onwards (i686 is way older)
  [[ "$CARCH" = 'i686' ]] && {
    _cmakeopts=('-D ENABLE_SSE=OFF'
      '-DENABLE_SSE2=OFF'
      '-DENABLE_SSE3=OFF')
    CXXFLAGS+=" -DEIGEN_DONT_VECTORIZE"
    _ffmpeg_plugin='opencv_ffmpeg.dll'
  }

  # all x64 CPUs support SSE2 but not SSE3
  [[ "$CARCH" = 'x86_64' ]] && {
    # _cmakeopts+=('-DENABLE_SSE3=OFF')
    _ffmpeg_plugin='opencv_ffmpeg_64.dll'
  }

  pushd ${srcdir}/${_realname}-${pkgver}/3rdparty/ffmpeg > /dev/null
  rm -f ./*.dll
  gcc -Wall -shared -o ${_ffmpeg_plugin} ${CXXFLAGS} -x c++ \
    -I../include -I../../modules/highgui/src ffopencv.c \
    -lavformat -lavcodec -lavdevice -lavresample -lswscale -lavutil -lws2_32 \
    -lstdc++
  popd > /dev/null

  [[ -d ${srcdir}/build-${CARCH} ]] && rm -rf ${srcdir}/build-${CARCH}
  mkdir -p ${srcdir}/build-${CARCH} && cd ${srcdir}/build-${CARCH}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe -Wno-dev \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DPKG_CONFIG_WITHOUT_PREFIX=ON \
    -DWITH_OPENCL=ON \
    -DWITH_OPENGL=ON \
    -DWITH_TBB=ON \
    -DWITH_XINE=OFF \
    -DBUILD_WITH_DEBUG_INFO=OFF \
    -DBUILD_DOCS=OFF \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_EXAMPLES=OFF \
    -DINSTALL_C_EXAMPLES=OFF \
    -DINSTALL_PYTHON_EXAMPLES=OFF \
    -DWITH_GTK=OFF \
    -DWITH_QT=OFF \
    -DWITH_VTK=OFF \
    -DWITH_FFMPEG=ON \
    -DWITH_GSTREAMER=OFF \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=ON \
    -DENABLE_PRECOMPILED_HEADERS=OFF \
    ${_cmakeopts[@]} \
    ../${_realname}-${pkgver}

  make
}

package() {
  cd "${srcdir}/build-${CARCH}"
  make DESTDIR=${pkgdir} -j1 install
}
